@{
    ViewBag.Title = "GraphicList";
}
<script src="@Url.Content("/DocSystem/Scripts/AdvanceQuery.js")" type="text/javascript"></script>
<div class="mini-toolbar" style="padding: 0px;">
    <table style="width: 100%;">
        <tr>
            <td style="white-space: nowrap;"></td>
            <td style="white-space: nowrap; font-family: Tahoma,Verdana,宋体">
                排序
            </td>
            <td style="white-space: nowrap;">
                <input name="SortField" onvaluechanged="onSortFieldChange" class="mini-combobox"
                       style="width: 90px;" textfield="text" valuefield="value" data=@ViewBag.SortField allowinput="false" />
                <a class="mini-button" checkonclick="true" groupname="sort" iconcls="icon-upload" oncheckedchanged="onCheckedChanged"
                   plain="true">升序</a>
                <a class="mini-button" checkonclick="true" groupname="sort" iconcls="icon-download" oncheckedchanged="onCheckedChanged"
                   plain="true">降序</a>
            </td>
            <td style="width: 100%;">
            </td>
            <td style="white-space: nowrap;">
                <a class="mini-button" onclick="loading()" iconcls="icon-find" plain="true" id="btnSearch">查询</a>
                <a class="mini-button" onclick="cusClearQueryForm();" iconcls="icon-undo" plain="true" id="btnClear">清空</a>
                @*<a class="mini-button" onclick="showList" iconcls="icon-glyphicon-list" plain="true">转到列表</a>*@
            </td>
        </tr>
    </table>
</div>
<div id="divQueryForm" style="padding-left: 11px; padding-bottom: 5px; border-bottom: 1px; border-bottom-color: Black;">
    @Html.Raw(ViewBag.QueryFormHtml)
</div>
<div id="divAdQueryStr" style="padding-left: 11px; padding-bottom: 5px; border-bottom: 1px; border-bottom-color: Black;display:none">
</div>
<div class="mini-fit" id="dataGridDiv">
    <div id="content">
    </div>
</div>
<div id="pager" class="mini-pager" pagesize="20" showpagesize="false" showreloadbutton="true" onpagechanged="onPageChanged"
     style="width: 99%; background: #f0f3f7; border: solid 1px #ccc;" sizelist="[20]">
</div>
@Styles.Render("~/Scripts/FileView.css")
<script type="text/javascript">
    var borrowType = "File"; QueryOnEnter = false;
    var spaceID = getQueryString("SpaceID");

    var ArchiveType = @Html.Raw(ViewBag.ArchiveType)
    mini.parse();

    $("#queryForm .mini-textbox").bind("keyup", function (event) {
        if (event.keyCode == "13") {
            loading();
        }
    });

    var pager = mini.get("pager");
    var requestData = { SpaceID: spaceID, pageIndex: 0, pageSize: pager.pageSize, SortField: "S_FileInfo.ID", SortDir: "desc" };
    loadCarInfo(spaceID);
    loading(requestData);
    function showList() {
        var url = "List?SpaceID=" + spaceID + "&ConfigID=" + getQueryString("ConfigID") + "&ShowAdvanceQuery=" + getQueryString("ShowAdvanceQuery") + "&QueryType=" + getQueryString("QueryType");
        if (getQueryString("NodeID"))
            url += "&NodeID=" + getQueryString("NodeID");
        window.location = url;
    }

    function FileTypeValueChanged(e) {
        addExecuteParam("FilterFileType", e.value); loading();
    }

    function onPageChanged(e) {
        requestData["pageIndex"] = e.pageIndex;
        requestData["pageSize"] = e.pageSize;
        loading();
    }

    function loading(loaddata) {
        var sortFiled = mini.getbyName("SortField").getValue();
        var data = $.extend({}, requestData, loaddata);
        if (sortFiled) {
            data["SortField"] = sortFiled;
        }
        else {
            data["SortField"] = "ID";
        }
        var form = new mini.Form("queryForm"); var queryData = form.getData();
        addExecuteParam("queryFormData", mini.encode(queryData));
        addExecuteParam("sortField", data["SortField"]);
        addExecuteParam("pageIndex", data["pageIndex"]);
        addExecuteParam("sortOrder", data["SortDir"]);

        if (advanceQuery) {
            var queryItems = advanceQueryData.List;
            addExecuteParam("AdvanceQueryList", mini.encode(queryItems));
        }

        execute("GetGraphicList", {
            showLoading: true, refresh: false, onComplete: function (data) {
                if (data != undefined) {
                    $("#content").empty();
                    var html = "";
                    for (var i = 0; i < data.HtmlData.length; i++) {
                        var obj = data.HtmlData[i];
                        var subTitle = "";
                        for (var j = 0; j < obj.SubTitle.length; j++) {
                            subTitle += "<div style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">" + obj.SubTitle[j] + "</div>";
                        }
                        html += "<div class=\"Item\" title=\"" + obj.ListInfos + "\">" +
"   <div class=\"item-box\">" +
"       <a style=\"text-decoration:none!important;\" href=\"javascript:showGallary('" + obj.ID + "','" + obj.Title + "')\">" +
"           <div class=\"pic\">" +
"               <img style=\"height: 200px; width: 100%\" alt=\"\" src=\"" + getImgSrc(obj.FileID) + "\" onerror=\"this.src='/DocSystem/Scripts/Images/NoPic.jpg'\">" +
"           </div>" +
"           <div class=\"summary\">" + obj.Title + "</div>" +
"           <div class=\"row\" style=\"margin-left: 0px !important;\">" + subTitle + "</div>" +
"       <a/>" +
"   </div>" +
"</div>"
                    }
                    $("#content")[0].innerHTML = html;
                    SetButtonAuth();
                    mini.get("pager").update(data["CurrentPage"], pager.pageSize, data["Total"]);
                    mini.layout();
                }
            }
        });
    }

    //由于异步加载缩略图内容，所以重新设置缩略图下方的按钮权限（授权对象）
    function SetButtonAuth() {
        //按钮字段权限,移除没有权限的控件
        if (typeof (noneAuthControl) != "undefined" && noneAuthControl != "") {
            var arr = noneAuthControl.split(',');
            for (var i = 0; i < arr.length; i++) {
                if (arr[i] == "")
                    continue;
                //按钮或容器
                $("a[name='" + arr[i] + "']").hide();
            }
        }
        if (typeof (hasAuthControl) != "undefined" && hasAuthControl != "") {
            var arr = hasAuthControl.split(',');
            for (var i = 0; i < arr.length; i++) {
                if (arr[i] == "")
                    continue;
                //按钮或容器
                $("a[name='" + arr[i] + "']").show();
            }
        }
    }

    function onCheckedChanged(e) {
        var btn = e.sender;
        var checked = btn.getChecked();
        if (checked) {
            var loaddata = {};
            var text = btn.getText();
            if (text == "升序") requestData["SortDir"] = "asc";
            else requestData["SortDir"] = "desc";
            loading();
        }
    }

    function onSortFieldChange(e) {
        var sortField = mini.getbyName("SortField").getValue();
        if (!sortField) requestData["SortField"] = "ID";
        else requestData["SortField"] = sortField;
        loading();
    }


    function ViewInfo(fileid, configID) {
        var url = "Edit?ID=" + fileid + "&SpaceID=" + spaceID + "&ConfigID=" + configID;
        openWindow(url, { addQueryString: false, title: '文件查询', width: "70%", height: "70%", funcType: 'view' });
    }

    function Download(fileid) {
        var file = { ID: fileid };
        var files = new Array(); files.add(file);
        DownloadFiles(files, spaceID);
    }

    function Borrow(fileid) {
        var file = { ID: fileid }; var files = new Array(); files.add(file);
        BorrowFile(files, spaceID);
    }

    function openBorrowCar() {
        var url = "/DocSystem/Car/Car/Car";
        openWindow(url, {
            refresh: false, title: "借阅申请信息", width: "80%", height: "80%",
            onDestroy: function (data) {
                loadCarInfo(spaceID);
            }
        }
                );
    }

    function openDownloadCar() {
        var url = "/DocSystem/Car/Car/Car";
        openWindow(url, {
            refresh: false, title: "借阅申请信息", width: "80%", height: "80%",
            onDestroy: function (data) {
                loadCarInfo(spaceID);
            }
        }
                );
    }

    var advanceQuery = false;
    var advanceQueryData = { QueryType: "File", QueryTypeName: "文件", QueryNode: "", QueryNodeName: "", List: [] };
    function addQueryAdvance() {
        var url = "/DocSystem/View/AdvanceQuery/AttrSelector?QueryType=File&FromPage=1";
        openWindow(url, {
            refresh: false, title: "查询条件设置", width: 900, height: 500, data: advanceQueryData,
            onDestroy: function (data) {
                if (!data || data == "close") { return; }
                advanceQueryData = data;
                advanceQuery = true;
                $.extend(advanceQueryData, data);
                ShowAvanceQueryString('divAdQueryStr');
                $("#divQueryForm").hide();
                $("#btnSearch").hide();
                $("#divAdQueryStr").show();
                loading();
            }
        });
    }

    function cusClearQueryForm() {
        if (advanceQuery) {
            $("#divQueryForm").show();
            $("#btnSearch").show();
            $("#divAdQueryStr").hide();
            advanceQuery = false;
        }
        else
            clearQueryForm();

        mini.layout();
    }

    var DownloadUrl = window.location.protocol + '//' + window.location.host + "/FileStore/Download.aspx";
    function getImgSrc(fID) {
        if (!fID) return "/DocSystem/Scripts/Images/NoPic.jpg";
        var url = DownloadUrl;
        var result = "";
        $.ajax({
            url: url,
            type: "post",
            data: { id: fID },
            cache: false,
            async: false,
            success: function (text) {
                //增加新版报错分支
                if (text && typeof (text) == "string" && text.indexOf("{\"errcode\"") == 0) {
                    var fail = jQuery.parseJSON(text);
                    var msg = getErrorFromHtml(fail.errmsg);
                    msgUI(msg, 4);
                    return;
                }
                else
                    result = text;
            },
            error: function (jqXHR, textStatus, errorThrown) {
                var msg = "提交服务器失败";
                msgUI(msg, 4);
            }
        });
        return (url + "?auth=" + result);
    }

    function showGallary(id, title) {
        openWindow("/DocSystem/Common/Gallery?ID=" + id + "&SpaceID=" + getQueryString("SpaceID"), {
            width: "92%",
            height: "95%",
            title: title,
            showMaxButton: false
        });
    }
</script>
