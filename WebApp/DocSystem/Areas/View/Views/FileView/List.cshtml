@{
    ViewBag.Title = "List";
}
@*<script src="@Url.Content("/DocSystem/Scripts/AdvanceQuery.js")" type="text/javascript"></script>*@
<div class="mini-toolbar" style="padding: 0px; border-top: 0px;">
    <table style="width: 100%;">
        <tr>
            <td style="width: 100%;">
                @Html.Raw(ViewBag.BtnHTML)
                <div id="include" name="includeChildren" class="mini-checkbox" checked="false" readonly="false" text="包括子目录文件"
                     onvaluechanged="onValueChanged">
                </div>
            </td>
            <td style="white-space: nowrap;">
                <a class="mini-button" onclick="search()" iconcls="icon-find" plain="true" id="btnSearch">查询</a>
                <a class="mini-button" onclick="cusClearQueryForm();" iconcls="icon-undo" plain="true" id="btnClear">清空</a>
                @{
                    if (ViewBag.IsAtlas == "True")
                    {
                        @*<a class="mini-button" onclick="showGraphic" iconcls="icon-glyphicon-th" plain="true" id="btnShowGraphic">查看大图</a>*@
                    }
                }
            </td>
        </tr>
    </table>
</div>
<div id="divQueryForm" style="padding-left: 11px; padding-bottom: 5px;">
    @Html.Raw(ViewBag.QueryFormHtml)
</div>
<div id="divAdQueryStr" style="padding-left: 11px; padding-bottom: 5px;display:none">
</div>
<div class="mini-fit" id="dataGridDiv" style="height: 100px;">
    @Html.Raw(ViewBag.DatagridHtml)
</div>
<script type="text/javascript">
    @{
        var enumList = ViewBag.Enums as List<string>;
        foreach (var item in enumList)
        {
        @Html.GetEnum(item);

        }
}
</script>
<script type="text/javascript">
    @Html.Raw(ViewBag.Script)
    var ArchiveType = "@Html.Raw(ViewBag.ArchiveType)".split(',');

    var borrowType = "File";
    var spaceID = getQueryString("SpaceID");
    var configID = getQueryString("ConfigID");
    var nodeID = getQueryString("NodeID");

    addGridLink('dataGrid', 'Name', 'Edit?ID={ID}&SpaceID=' + spaceID + '&ConfigID=' + configID, {
        addQueryString: false, title: "查看", funcType: 'view', width: "70%", height: "70%", onDestroy: function () {
            mini.get("dataGrid").reload();
        }
    });

    addGridLink('dataGrid', 'BorrowDetail', '/MvcConfig/UI/List/PageView?TmplCode=BorrowDetailView&RelateID={ID}', {
        addQueryString: false, title: "查看", funcType: 'view', width: "70%", height: "70%", linkText: "查看"
    });
    $("#dataGrid").attr("ondrawcell", "onDrawCell");
    function onDrawCell(e) {
        var record = e.record, column = e.column, field = e.field, value = e.value;
        if (field == "BorrowState") {
            if (e.value == "Borrow") {
                e.cellHtml = "<span class='icon-Red' title='借出'></span>"
            } else {
                e.cellHtml = "<span class='icon-Green' title='未借出'></span>"
            }
        }
    }


    $("#queryForm .mini-textbox").bind("keyup", function (event) {
        if (event.keyCode == "13") {
            search();
        }
    });

    function opentree() {
        var grid = mini.get("dataGrid");
        var row = grid.getSelected();
        if (!row) { msgUI("请选中一条记录"); return; }
        var url = "/DocSystem/View/NodeView/Tree?ID=" + row.NodeID + "&SpaceID=" + row.SpaceID;
        openWindow(url, { addQueryString: false, title: '图档树形图', width: "90%", height: "90%", funcType: 'view' });
    }

    var showInclude = getQueryString("ShowInclude");
    if (!showInclude) {
        $("#include").hide();
    }



    function search(normalSettings) {
        var settings = $.extend(true, {}, normalParamSettings, normalSettings);
        var form;
        if ($("#" + settings.queryWindowId).find("form").length > 0) {

            var _formId = $("#" + settings.queryWindowId).find("form").attr("id");
            form = new mini.Form("#" + _formId);
        }
        else {
            form = new mini.Form("#queryForm");
        }
        var grid = mini.get("#" + settings.gridId);
        var quickSearchData = {};
        var keyCo = mini.get(settings.queryBoxId);
        if (keyCo && settings.searchFields) {
            var keys = settings.searchFields.split(',');
            for (i = 0, len = keys.length; i < len; i++) {
                quickSearchData["$IL$" + keys[i]] = keyCo.getValue();
            }
        }
        var includeChild = mini.getbyName("includeChildren");
        var checked = false;
        if (includeChild) {
            checked = includeChild.getValue();
        }
        var data = {};
        form.validate();
        if (form.isValid() == false) return;
        data = form.getData();
        if (grid != undefined)
            grid.load({ queryFormData: mini.encode(data), quickQueryFormData: mini.encode(quickSearchData), IncludeChildren: checked });

        if ($("#" + settings.queryWindowId).find("form").length > 0)
            hideWindow(settings.queryWindowId);
    }

    function onValueChanged(e) {
        search();
    }

    function browse() {
        var grid = mini.get("dataGrid");
        var row = grid.getSelected();
        if (!row) { msgUI("请选择需要浏览的文件记录"); return; }
        if (row.Media == "纸版") {
            msgUI(row.Name + "载体是纸版，不能浏览！"); return;
        }
        Browse(row.ID, row.SpaceID);
        addHistory(row.Name, row.ID, row.NodeID, row.SpaceID, "view");
    }

    function download() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds();
        if (rows.length == 0) { msgUI("请选择需要下载的文件记录"); return; }
        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            if (row.Media == "纸版") {
                msgUI(row.Name + "载体是纸版，不能下载！"); return;
            }
        }

        DownloadFiles(rows, spaceID);
        if (rows.length == 1)
            addHistory(row.Name, row.ID, row.NodeID, row.SpaceID, "download");
        RefreshPicDocCar();
    }

    var advanceQuery = false;
    var advanceQueryData = { QueryType: "File", QueryTypeName: "文件", QueryNode: configID, QueryNodeName: "", List: [] };
    function addQueryAdvance() {
        var url = "/DocSystem/View/AdvanceQuery/AttrSelector?QueryType=File&FromPage=1" + "&ConfigID=" + advanceQueryData.QueryNode;
        openWindow(url, {
            refresh: false, title: "查询条件设置", width: 900, height: 500, data: advanceQueryData,
            onDestroy: function (data) {
                if (!data || data == "close") { return; }
                $.extend(advanceQueryData, data);
                advanceQuery = true;
                ShowAvanceQueryString('divAdQueryStr');
                $("#divQueryForm").hide();
                $("#btnSearch").hide();
                $("#divAdQueryStr").show();
                adSearch();
                mini.layout();
            }
        });
    }
    function adSearch() {

        var queryItems = advanceQueryData.List;
        var queryType = advanceQueryData.QueryType;
        var queryNode = advanceQueryData.QueryNode;

        var grid = mini.get("#dataGrid");

        grid.load({ AdvanceQueryList: mini.encode(queryItems) });

    }
    function cusClearQueryForm() {
        if (advanceQuery) {
            $("#divQueryForm").show();
            $("#btnSearch").show();
            $("#divAdQueryStr").hide();
            advanceQuery = false;
        }
        else
            clearQueryForm();

        mini.layout();
    }

    function borrow() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds();
        if (rows.length == 0) { msgUI("请选择需要借阅的文件记录"); return; }
        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            if (row.BorrowState == "Borrow") {
                msgUI(row.Name + "已经借出，不能借阅！"); return;
            }
            if (row.Media == "电子版") {
                msgUI(row.Name + "载体是电子版，不能借阅！"); return;
            }
        }
        BorrowFile(rows, spaceID);
        if (rows.length == 1)
            addHistory(row.Name, row.ID, row.NodeID, row.SpaceID, "borrowfile");
        RefreshPicDocCar();
    }
    //刷新图文档案首页购物车数量
    function RefreshPicDocCar() {
        execute("/DocSystem/View/MyPortal/GetCarCount", {
            validateForm: false, showLoading: false, async: false, refresh: false, onComplete: function (data) {
                $(".divright",parent.parent.document).text(data.carCount);
            }
        });
    }
    
    function showGraphic() {
        var url = "GraphicList?SpaceID=" + getQueryString("SpaceID") + "&ConfigID=" + getQueryString("ConfigID") + "&ShowAdvanceQuery=" + getQueryString("ShowAdvanceQuery") + "&QueryType=" + getQueryString("QueryType");
        if (getQueryString("NodeID"))
            url += "&NodeID=" + getQueryString("NodeID");
        window.location = url;
    }
</script>
