@{
    ViewBag.Title = "List";
}
<script src="@Url.Content("/DocSystem/Scripts/AdvanceQuery.js")" type="text/javascript"></script>
<div class="mini-toolbar" style="padding: 0px; border-top: 0;">
    <table style="width: 100%;">
        <tr>
            <td style="width: 100%;">
                @Html.Raw(ViewBag.BtnHTML)
                <div id="include" name="includeChildren" class="mini-checkbox" checked="false" readonly="false"
                     text="包括子目录文件" onvaluechanged="onValueChanged">
                </div>
            </td>
            <td style="white-space: nowrap;">
                <a class="mini-button" onclick="search()" iconcls="icon-find" plain="true" id="btnSearch">查询</a>
                <a class="mini-button" onclick="clearQueryForm()" iconcls="icon-undo" plain="true" id="btnClear">清空</a>
                @{
                    if (ViewBag.IsAtlas == "True")
                    {
                        <a class="mini-button" onclick="showGraphic" iconcls="icon-glyphicon-th" plain="true" id="btnShowGraphic">查看大图</a>
                    }
                }
            </td>
        </tr>
    </table>
</div>
<div id="divQueryForm" style="padding-left: 11px; padding-bottom: 5px;">
    @Html.Raw(ViewBag.QueryFormHtml)
</div>
<div class="mini-fit" id="dataGridDiv" style="height: 100px;">
    @Html.Raw(ViewBag.DatagridHtml)
</div>
<script type="text/javascript">
    @{
        var enumList = ViewBag.Enums as List<string>;
        foreach (var item in enumList)
        {
        @Html.GetEnum(item);

        }
}
</script>
<script type="text/javascript">
    @Html.GetEnum(typeof(DocSystem.Logic.Domain.DocState))

</script>
<script type="text/javascript">
    //选择
    var IsEdit = "@Request["$IsEdit"]";
    function returnSelectList() {
        debugger
        if (IsEdit == "true") {
            if (window.parent.parent.parent.parent && window.parent.parent.parent.returnSelectList) {
                window.parent.parent.parent.returnSelectList();
            }
        } else {

            if (window.parent && window.parent.returnSelectList) {
                window.parent.returnSelectList();
            }
        }
    }
    function GetSelecteds() {
        var grid = mini.get("dataGrid");
        return grid.getSelecteds();
    }
</script>
<script type="text/javascript">
    @Html.Raw(ViewBag.Script)

    var ArchiveType = "@Html.Raw(ViewBag.ArchiveType)".split(',');
    addGridEnum("dataGrid", "State", "DocState");

    var SpaceID = getQueryString("SpaceID");
    var configID = getQueryString("ConfigID");
    var nodeID = getQueryString("NodeID");
    var showInclude = getQueryString("ShowInclude");
    if (!showInclude) {
        $("#include").hide();
    }
    var IsEdit="@Request["$IsEdit"]";
    if (IsEdit == "true") {
        addGridLink('dataGrid', 'Name', 'Edit?ID={ID}&SpaceID=' + SpaceID + '&ConfigID=' + configID+"&Functype=View", {
            addQueryString: false, title: "查看", width: 800, height: 500, onDestroy: function () {
                mini.get("dataGrid").reload();
            }
        });
    } else {
        addGridLink('dataGrid', 'Name', 'Edit?ID={ID}&SpaceID=' + SpaceID + '&ConfigID=' + configID, {
            addQueryString: false, title: "编辑", width: 800, height: 500, onDestroy: function () {
                mini.get("dataGrid").reload();
            }
        });
    }
    addGridLink('dataGrid', 'BorrowDetail', '/MvcConfig/UI/List/PageView?TmplCode=BorrowDetailView&RelateID={ID}', {
        addQueryString: false, title: "查看", width: "70%", height: "70%", linkText: "查看"
    });
    addGridLink('dataGrid', 'ArchivesLifeCycle', '/MvcConfig/UI/List/PageView?TmplCode=ArchivesLifeCycle&RelateID={ID}', {
        addQueryString: false, title: "操作记录", width: "70%", height: "70%", linkText: "查看"
    });
    function search(normalSettings) {
        var settings = $.extend(true, {}, normalParamSettings, normalSettings);
        var form;
        if ($("#" + settings.queryWindowId).find("form").length > 0) {

            var _formId = $("#" + settings.queryWindowId).find("form").attr("id");
            form = new mini.Form("#" + _formId);
        }
        else {
            form = new mini.Form("#queryForm");
        }
        var grid = mini.get("#" + settings.gridId);
        var quickSearchData = {};
        var keyCo = mini.get(settings.queryBoxId);
        if (keyCo && settings.searchFields) {
            var keys = settings.searchFields.split(',');
            for (i = 0, len = keys.length; i < len; i++) {
                quickSearchData["$IL$" + keys[i]] = keyCo.getValue();
            }
        }
        var includeChild = mini.getbyName("includeChildren");
        var checked = false;
        if (includeChild) {
            checked = includeChild.getValue();
        }
        var data = {};
        form.validate();
        if (form.isValid() == false) return;
        data = form.getData();
        if (grid != undefined)
            grid.load({ queryFormData: mini.encode(data), quickQueryFormData: mini.encode(quickSearchData), IncludeChildren: checked });

        if ($("#" + settings.queryWindowId).find("form").length > 0)
            hideWindow(settings.queryWindowId);
    }

    $("#queryForm .mini-textbox").bind("keyup", function (event) {
        if (event.keyCode == "13") {
            search();
        }
    });

    $("#dataGrid").attr("ondrawcell", "onDrawCell");
    function onDrawCell(e) {
        var record = e.record, column = e.column, field = e.field, value = e.value;
        if (field == "State") {
            e.cellHtml = "<span class='icon-" + e.value + "' title='" + e.cellHtml + "'></span>";
        }

        if (field == "BorrowState") {
            if (e.value == "Borrow") {
                e.cellHtml = "<span class='icon-Red' title='借出'></span>"
            } else {
                e.cellHtml = "<span class='icon-Green' title='未借出'></span>"
            }
        }
    }

    function movefile() {
        var dataGrid = mini.get("dataGrid");
        var rows = dataGrid.getSelecteds();
        if (rows.length == 0) { alert("请至少选择一条记录"); return; }
        var url = "../NodeManager/NodeSelected?SpaceID=" + SpaceID + "&ID=" + rows[0].NodeID;
        var ListIDs = "";
        for (var i = 0; i < rows.length; i++) {

            ListIDs += rows[i].ID + ",";

        }
        openWindow(url, {
            refresh: false, title: "选择移动至", width: 300, height: 500,
            onDestroy: function (node) {
                if (node == "close" || !node || node.length == 0) return;
                msgUI("您确定需要将文件移动到指定的节点么？", 2, function (result) {
                    if (result != "ok")
                        return;
                    //if (!mini.confirm("您确定需要将文件移动到指定的节点么？")) { return; }
                    addExecuteParam("ListIDs", ListIDs);
                    addExecuteParam("NodeID", node.ID);
                    addExecuteParam("SpaceID", SpaceID);
                    execute("movefile", {
                        showLoading: true, onComplete: function (data) {
                            dataGrid.reload();
                        }
                    });
                });
            }
        });
    }


    function onValueChanged(e) {
        search();
    }

    function browse() {
        var grid = mini.get("dataGrid");
        var row = grid.getSelected();
        if (!row) { mini.alert("请选择需要浏览的文件记录"); return; }
        if (row.Media == "纸版") {
            alert(row.Name + "载体是纸版，不能浏览！"); return;
        }
        Browse(row.ID, row.SpaceID);
    }

    function opentree() {
        var grid = mini.get("dataGrid");
        var row = grid.getSelected();
        if (!row) { mini.alert("请选中一条记录"); return; }
        var url = "/DocSystem/Manager/NodeManager/Tree?ID=" + row.NodeID + "&SpaceID=" + row.SpaceID;
        openWindow(url, { addQueryString: false, title: '图档树形图', width: $(window.parent.parent).width() - 50, height: $(window).height() + 100, funcType: 'view' });
    }

    function download() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds();
        if (rows.length == 0) { mini.alert("请选择需要下载的文件记录"); return; }
        var attachments = "";
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].Media == "纸版") {
                alert(rows[i].Name + "载体是纸版，不能下载！"); return;
            }
            if (rows[i].Attachment)
                attachments += rows[i].Attachment + ",";
            if (rows[i].MainFile)
                attachments += rows[i].MainFile + ",";
            for (var j = 0; j < ArchiveType.length; j++) {
                var type = ArchiveType[j];
                if(type=="PdfFile") type = "PDFFile"
                if (rows[i][type])
                    attachments += rows[i][type] + ","
            }
        }
        DownloadDirector(attachments);
    }

    function publish() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds(); if (rows.length == 0) { mini.alert("请选中一条记录"); return; }
        mini.confirm("发布选中编目将同时发布子编目及文件内容，是否继续？", "", function (action) {
            if (action != "ok") return;
            var listIDs = "";
            for (var i = 0; i < rows.length; i++) {
                listIDs += rows[i].ID + ",";
            }
            addExecuteParam("ID", listIDs);
            execute("publish", {
                showLoading: true, refresh: false, onComplete: function (data) {
                    grid.reload();
                }
            });
        });
    }

    function forbidden() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds(); if (rows.length == 0) { mini.alert("请选中一条记录"); return; }
        mini.confirm("禁用选中编目将同时禁用子编目及文件内容，是否继续？", "", function (action) {
            if (action != "ok") return;
            var listIDs = "";
            for (var i = 0; i < rows.length; i++) {
                listIDs += rows[i].ID + ",";
            }
            addExecuteParam("ID", listIDs);
            execute("forbidden", {
                showLoading: true, refresh: false, onComplete: function (data) {
                    grid.reload();
                }
            });
        });
    }

    function upVersion() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds(); if (rows.length == 0) { mini.alert("请选中一条记录"); return; }
        openWindow("Edit?ID=" + rows[0].ID + "&UpVersion=true&SpaceID=" + SpaceID + "&ConfigID=" + configID, {
            width: 800, height: 500, title: "升版"
        });
    }

    function viewVersion() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds(); if (rows.length == 0) { mini.alert("请选中一条记录"); return; }
        openWindow("VersionList?fileID=" + rows[0].ID, { title: "查看版本" });
    }

    function borrowreturn()
    {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds(); if (rows.length == 0) { mini.alert("请选中一条记录"); return; }
        mini.confirm("确认归还吗？", "", function (action) {
            if (action != "ok") return;
            ReturnFile(SpaceID);
        });
    }
    
    function showGraphic() {
        var url = "GraphicList?SpaceID=" + getQueryString("SpaceID") + "&ConfigID=" + getQueryString("ConfigID") + "&ShowAdvanceQuery=" + getQueryString("ShowAdvanceQuery") + "&QueryType=" + getQueryString("QueryType");
        if (getQueryString("NodeID"))
            url += "&NodeID=" + getQueryString("NodeID");
        window.location = url;
    }
</script>
<!--查看未发布的列表-->
<script type="text/javascript">
    var State = getQueryString("State");
    if (State != "" && State != null && typeof State != "undefined") {
        $(".mini-toolbar").each(function () {
            var eles = $(this).find("a");
            $.each(eles, function (i, item) {
                if (item.id !== "btnOpenTree" && item.id !== "btnPublish")
                    item.remove();
            });
        });
        $("#divQueryForm").children().hide()
        $(".mini-toolbar").find("td:first").append('<input id="key" style="float:right;margin-right:2%" class="mini-buttonedit gw-searchbox" style="width: 150px;" emptytext="请输入编号或名称" onenter="quickSearch(\'Name,Code\');"onbuttonclick="quickSearch(\'Name,Code\');" />');
    }
</script>