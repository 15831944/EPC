@{
    ViewBag.Title = "TreeEdit";
}
<div id="formlayout" class="mini-layout" style="width: 100%; height: 100%;">
    <div region="north" height="32" showspliticon="false" showheader="false" allowresize="false"
         splitsize="0" style="border: 0;">
        <div class="mini-toolbar" style="padding: 0px;">
            <table style="width: 100%;">
                <tr>
                    <td style="width: 100%;">
                        <a class="mini-button" iconcls="icon-save" onclick="saveNode()" plain="true">保存</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div title="center" region="center" style="border: 0;">
        @Html.Raw(ViewBag.FormHtml)
    </div>
</div>
<script type="text/javascript">
    @Html.Raw(ViewBag.SelectorScipts)
 </script>
<script type="text/javascript">
    @{
    var enumList = ViewBag.Enums as List<string>;
    foreach (var item in enumList)
    {
        @Html.GetEnum(item);
    }
}
</script>
<script type="text/javascript">


    function saveNode() {
        save({ showLoading: true, onComplete: function (data) {
            msgUI("保存成功", 1, function () {
                var returnData = getQueryString("ReturnData");
                if (returnData == "true")
                {
                    closeWindow(data);
                }
                else if (window.parent.updateTree) {
                    window.parent.updateTree(data);
                }
            });
        }
        });
    }

    function afterSaveData(responseData) {
        if (window.parent.updateTree) {
            window.parent.updateTree(responseData.recdata);
        }
    }

    function onFormSetData(data) {
        var isNew = (data.ID == undefined || data.ID == "" || data.ID == null);
        setQuantityCtrl(isNew);
    }

    function setQuantityCtrl(isNew) {
        var QuantityCtrl = mini.getbyName("Quantity");
        var StorageNumCtrl = mini.getbyName("StorageNum");
        if (QuantityCtrl) {
            if (isNew)
                QuantityCtrl.on("valuechanged", "onQuantityChanged");
            else
                QuantityCtrl.setEnabled(false);
        }
        if (StorageNumCtrl) {
            StorageNumCtrl.setEnabled(false);
        }
    }

    function onQuantityChanged() {
        var Quantity = mini.getbyName("Quantity").getValue();
        if (!isNaN(Quantity))
            mini.getbyName("StorageNum").setValue(Quantity);
    }
</script>
