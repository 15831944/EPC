@{
    ViewBag.Title = "list";
}
<script src="@Url.Content("/DocSystem/Scripts/AdvanceQuery.js")" type="text/javascript"></script>
<div class="mini-toolbar" style="padding: 0px; border-top: 0;">
    <table style="width: 100%;">
        <tr>
            <td style="width: 100%;">

                @Html.Raw(ViewBag.BtnHTML)
                @if (Request.QueryString["$IsSelect"] != "true")
                {
                @Html.ExportButton()
                }
            </td>
            <td style="white-space: nowrap;">
                <a class="mini-button" onclick="search()" iconcls="icon-find" plain="true" id="btnSearch">查询</a>
                <a class="mini-button" onclick="clearQueryForm()" iconcls="icon-undo" plain="true" id="btnClear">清空</a>
            </td>
        </tr>
    </table>
</div>
<div id="divQueryForm" style="padding-left: 11px; padding-bottom: 5px;">
    @Html.Raw(ViewBag.QueryFormHtml)
</div>
<div class="mini-fit" id="dataGridDiv" >
    @Html.Raw(ViewBag.DataGridHtml)
</div>
<script type="text/javascript">
    @{
        var enumList = ViewBag.Enums as List<string>;
        foreach (var item in enumList)
        {
        @Html.GetEnum(item);

        }
}
</script>

<script type="text/javascript">
    @Html.GetEnum(typeof(DocSystem.Logic.Domain.DocState))

</script>
<script type="text/javascript">
    @Html.Raw(ViewBag.Script)

    var nodeConfigID = getQueryString("ConfigID");
    addGridEnum("dataGrid", "State", "DocState");

    var spaceID = getQueryString("SpaceID");
    var IsEdit="@Request["$IsEdit"]";
    if (IsEdit == "true") {
        $('.mini-toolbar').find("a:eq(1)").remove();//移除添加按钮
        addGridLink('dataGrid', 'Name', 'Edit?ID={ID}&SpaceID=' + spaceID + '&ConfigID=' + nodeConfigID + '&Functype=View', {
            addQueryString: false, title: "查看", width: "70%", height: "70%", onDestroy: function () {
                mini.get("dataGrid").reload();
            }
        });
    } else {
        addGridLink('dataGrid', 'Name', 'Edit?ID={ID}&SpaceID=' + spaceID + '&ConfigID=' + nodeConfigID, {
            addQueryString: false, title: "编辑", width: "70%", height: "70%", onDestroy: function () {
                mini.get("dataGrid").reload();
            }
        });
    }
    addGridLink('dataGrid', 'BorrowDetail', '/MvcConfig/UI/List/PageView?TmplCode=BorrowDetailView&RelateID={ID}', {
        addQueryString: false, title: "查看", width: "70%", height: "70%",linkText:"查看"
    });    addGridLink('dataGrid', 'ArchivesLifeCycle', '/MvcConfig/UI/List/PageView?TmplCode=ArchivesLifeCycle&RelateID={ID}', {
        addQueryString: false, title: "操作记录", width: "70%", height: "70%", linkText: "查看"
    });

    $("#queryForm .mini-textbox").bind("keyup", function (event) {
        if (event.keyCode == "13") {
            search();
        }
    });


    $("#dataGrid").attr("ondrawcell", "onDrawCell");
    function onDrawCell(e) {
        var record = e.record, column = e.column, field = e.field, value = e.value;
        if (field == "State") {
            e.cellHtml = "<span class='icon-" + e.value + "' title='" + e.cellHtml + "'></span>";
        }

        if (field == "BorrowState") {
            if (e.value == "Borrow") {
                e.cellHtml = "<span class='icon-Red' title='借出'></span>"
            } else {
                e.cellHtml = "<span class='icon-Green' title='未借出'></span>"
            }
        }
    }

    function opentree() {
        var grid = mini.get("dataGrid");
        var row = grid.getSelected();
        if (!row) { mini.alert("请选中一条记录"); return; }
        var url = "/DocSystem/Manager/NodeManager/Tree?ID=" + row.ID + "&SpaceID=" + row.SpaceID;
        openWindow(url, { addQueryString: false, title: '图档树形图', width: "90%", height: "90%", funcType: 'view' });
    }

    function openfile() {
        var grid = mini.get("dataGrid");
        var row = grid.getSelected();
        if (!row) { mini.alert("请选中一条记录"); return; }
        var url = "/DocSystem/Manager/NodeManager/FileListTab?ID=" + row.ID + "&SpaceID=" + row.SpaceID + "&ConfigID=" + nodeConfigID;
        openWindow(url, { title: '文件信息', width: "90%", height: "90%", funcType: 'view' });
    }

    function publish() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds(); if (rows.length == 0) { mini.alert("请选中一条记录"); return; }
        mini.confirm("发布选中编目将同时发布子编目及文件内容，是否继续？", "", function (action) {
            if (action != "ok") return;
            var listIDs = "";
            for (var i = 0; i < rows.length; i++) {
                listIDs += rows[i].ID + ",";
            }
            addExecuteParam("ID", listIDs);
            execute("publish", {
                showLoading: true, refresh: false, onComplete: function (data) {
                    msgUI("操作成功", 1, function () { grid.reload(); });
                }
            });
        });
    }

    function forbidden() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds(); if (rows.length == 0) { mini.alert("请选中一条记录"); return; }
        mini.confirm("禁用选中编目将同时禁用子编目及文件内容，是否继续？", "", function (action) {
            if (action != "ok") return;
            var listIDs = "";
            for (var i = 0; i < rows.length; i++) {
                listIDs += rows[i].ID + ",";
            }
            addExecuteParam("ID", listIDs);
            execute("forbidden", {
                showLoading: true, refresh: false, onComplete: function (data) {
                    msgUI("操作成功", 1, function () { grid.reload(); });
                }
            });
        });
    }

    function borrowreturn() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds(); if (rows.length == 0) { mini.alert("请选中一条记录"); return; }
        mini.confirm("确认归还吗？", "", function (action) {
            if (action != "ok") return;
            ReturnNode(spaceID);
        });
    }

    function GetSelecteds()
    {
        var grid = mini.get("dataGrid");
        return grid.getSelecteds();
    }

    function del() {
        var grid = mini.get("dataGrid");
        var rows = grid.getSelecteds();
        if (rows.length == 0)
            msgUI("当前没有选择要操作的记录，请重新确认！", 1);
        //addExecuteParam("SpaceID", getQueryString("SpaceID"));
        msgUI("节点及其以下内容均将删除，确认删除？", 2, function (result) {
            if (result != "ok") { return; }
            execute("Delete", {
                showLoading: true, refresh: true, validateForm: false
            });
        });
    }
</script>
<script type="text/javascript">
    function returnSelectList() {
        
        if (IsEdit == "true") {
            if (window.parent.parent.parent.parent && window.parent.parent.parent.returnSelectList) {
                window.parent.parent.parent.returnSelectList();
            }
        } else {

            if (window.parent && window.parent.returnSelectList) {
                window.parent.returnSelectList();
            }
        }
    }
</script>
<!--查看未发布的列表-->
<script type="text/javascript">
    var State = getQueryString("State");
    if (State =="Normal") {
        $(".mini-toolbar").each(function () {
            var eles = $(this).find("a");
            $.each(eles, function (i, item) {
                if (item.id !== "btnOpenTree" && item.id !== "btnPublish")
                    item.remove();
            });
        });
        $("#divQueryForm").children().hide()
        $(".mini-toolbar").find("td:first").append('<input id="key" style="float:right;margin-right:2%" class="mini-buttonedit gw-searchbox" style="width: 150px;" emptytext="请输入编号或名称" onenter="quickSearch(\'Name,Code\');"onbuttonclick="quickSearch(\'Name,Code\');" />');
    }
    function RelieveSeal() {
        var rows = mini.get("dataGrid").getSelecteds();
        var isStateSealUp = false;
        if (rows.length == 0) { msgUI("请选中一条记录"); return; }
        $.each(rows, function (index, item) { if (item.State != "SealUp" && item.State != "SealUpApply") isStateSealUp = true; item.RelateID = item.ID; item.RelateType = "Node"; delete (item["ID"]) });
        if (isStateSealUp) { msgUI("选择数据含有非密封文件"); return; }
        var url = '/DocSystem/DocSystemUI/DocumentRelieveSealApply/PageView?TmplCode=DocumentRelieveSealApply&FlowCode=DocumentRelieveSealApply';
        openWindow(url, {
            title: '解封信息', width: '80%', height: '80%', data: rows
        });
    }
</script>
