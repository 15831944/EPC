@{
    ViewBag.Title = "NodeSettingList";
}
<div id="formlayout" class="mini-layout" style="width: 100%; height: 100%;">
    <div title="north" region="north" height="36" showspliticon="false" showheader="false" allowresize="false"
         splitsize="0" style="border: 0;">
        <div class="mini-toolbar" id="btnDiv">
            <table>
                <tr>
                    <td>
                        <a class="mini-button" iconcls="icon-save" onclick="returnValue();" plain="true">确定</a>
                    </td>
                    <td id="btnRight">
                        <a class="mini-button" onclick="showHelp()" iconcls="icon-help" plain="true">帮助</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div title="center" region="center" style="border: 0;">
        <form id="dataForm">
            <input name="ID" class="mini-hidden" />
            <div class="formDiv">
                <fieldset>
                    <legend>触发更新操作</legend>
                    <table>
                        <tr class="hideRow">
                            <td width="15%"></td>
                            <td width="35%"></td>
                            <td width="15%"></td>
                            <td width="35%"></td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <div class="mini-toolbar" style="padding: 0px; border-bottom: 0;">
                                    <table style="width: 100%;">
                                        <tr>
                                            <td style="width: 100%;">
                                                <a class="mini-button" iconcls="icon-add" onclick="addRow({}, { gridId: 'SynData', isLast: true })" plain="true">增加</a>
                                                <a class="mini-button" iconcls="icon-remove" onclick="delRow({ gridId: 'SynData' })" plain="true">删除</a>
                                                <a class="mini-button" iconcls="icon-up" onclick="moveUp('SynData');">上移</a>
                                                <a class="mini-button" iconcls="icon-down" onclick="moveDown('SynData');">下移</a>
                                            </td>
                                            <td style="white-space: nowrap;"></td>
                                        </tr>
                                    </table>
                                </div>
                                <div id="SynData" class="mini-datagrid" style="width: 100%; height: auto" idfield="ID" showpager="false"
                                     allowcelledit="true" allowcellselect="true" multiselect="true" editnextonenterkey="true" editnextrowcell="true">
                                    <div property="columns">
                                        <div type="checkcolumn">
                                        </div>
                                        <div field="settings" width="80" headeralign="center" allowsort="false" align="left" autoshowpopup="true">
                                            详细设置
                                        </div>
                                        <div type="comboboxcolumn" autoshowpopup="true" field="SynDataMethod" width="*" headeralign="center" allowsort="false" align="center" vtype="required">
                                            更新操作<input property="editor" class="mini-combobox" valuefield="value" textfield="text" style="width:100%;" data="SetCBSOpportunity" />
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </form>
    </div>
</div>
<script type="text/javascript">
    @Html.GetEnum(typeof(Expenses.Logic.SetCBSOpportunity))
</script>
<script type="text/javascript">

    addGridButton("SynData", "settings", {
        linkText: '设置', onButtonClick: function (row) {
            var title = row.SynDataMethod + "详细设置";
            var url = "NodeSettings?SynData=" + row.SynDataMethod + "&DefineID=" + getQueryString("DefineID");
            var settingData = {};
            if (row["SynDataMethodSettings"]) {
                settingData = row["SynDataMethodSettings"]
            }
            settingData.SynData = row.SynDataMethod;
            openWindow(url, {
                width: "80%", title: title, data: settingData, onDestroy: function (data) {
                    if (data != "close") {
                        row["SynDataMethodSettings"] = mini.encode(data);
                    }
                }
            });
        }
    });

    function setData(data) {
        if (data) {
            var list = mini.decode(data);
            var dataGrid = mini.get("SynData");
            dataGrid.setData(list);
        }
    }

    function returnValue() {
        var dataGrid = mini.get("SynData");
        dataGrid.commitEdit();
        dataGrid.validate();
        if (dataGrid.isValid() == false) return;
        var data = dataGrid.getData();
        closeWindow(data);
    }

    function moveUp(gridId) {
        var dataGrid = mini.get("#" + gridId);
        var rows = dataGrid.getSelecteds();
        dataGrid.moveUp(rows);
    }

    function moveDown(gridId) {
        var dataGrid = mini.get("#" + gridId);
        var rows = dataGrid.getSelecteds();
        dataGrid.moveDown(rows);
    }

</script>