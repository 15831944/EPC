@{
    ViewBag.Title = "InvoiceEdit";
}
<div id="formlayout" class="mini-layout" style="width: 100%; height: 100%;">
    <div region="north" height="32" showspliticon="false" showheader="false" allowresize="false"
        splitsize="0" style="border: 0;">
        <div class="mini-toolbar" style="padding: 0px; border-left: 0; border-top: 0; border-right: 0;">
            <table style="width: 100%;">
                <tr>
                    <td style="width: 100%;">
                        <a class="mini-button" iconcls="icon-save" onclick="saveInvoice();" plain="true">保存</a>
                        <a class="mini-button" iconcls="icon-cancel" onclick="closeWindow()" plain="true">取消</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div title="center" region="center" style="border: 0;">
        <div class="formDiv">
            <div id="dataForm">
                <input name="ID" class="mini-hidden" />
                <fieldset>
                    <legend>基本信息</legend>
                    <div style="padding-left: 20px;">
                        <table width="100%" border="0" cellpadding="0" cellspacing="2">
                            <tr>
                                <td width="15%"></td>
                                <td width="35%;" style="padding-right: 40px;"></td>
                                <td width="15%"></td>
                                <td width="35%;" style="padding-right: 40px;"></td>
                            </tr>
                            <tr>
                                <td>合同名称
                                </td>
                                <td colspan="3" style="padding-right: 40px;">
                                    <input name="ContractInfoID" textname="ContractName" onbuttonclick="onContractSelecting"
                                        allowinput='false' required="true" class="mini-buttonedit" style="width: 100%" />
                                </td>
                            </tr>
                            <tr>
                                <td>付款单位
                                </td>
                                <td colspan="3" style="padding-right: 40px;">
                                    <input name="PayerUnitSub" textname="PayerUnitSubName" onbuttonclick="" class="mini-buttonedit"
                                        style="width: 100%" />
                                </td>
                            </tr>
                            <tr hidden="hidden">
                                <td>付款单位母公司
                                </td>
                                <td colspan="3" style="padding-right: 40px;">
                                    <input name="PayerUnitID" textname="PayerUnit" onbuttonclick="" class="mini-buttonedit"
                                        style="width: 100%" />
                                </td>
                            </tr>
                            <tr>
                                <td>税号
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="TaxAccount" class="mini-textbox" style="width: 100%" maxlength="200" required="true" />
                                </td>
                                <td>开票单位名称
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="InvoiceName" class="mini-textbox" style="width: 100%" maxlength="200" />
                                </td>
                            </tr>
                            <tr>
                                <td>开户银行
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="BankName" class="mini-textbox" style="width: 100%" maxlength="200" />
                                </td>
                                <td>银行账号
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="BankAccount" class="mini-textbox" style="width: 100%" maxlength="200" />
                                </td>
                            </tr>
                            <tr>
                                <td>开票金额（元）
                                </td>
                                <td style="padding-right: 40px;">
                                    <input onvaluechanged="InvoiceValueChanged" name="Amount" style="width: 100%" class="mini-textbox"
                                        vtype="float;min:0" />
                                </td>
                                <td>大写
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="ChineseAmount" style="width: 100%" class="mini-textbox" />
                                </td>
                            </tr>
                            <tr>
                                <td>发票类型
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="InvoiceType" class="mini-combobox" required="true" style="width: 100%;"
                                        textfield="text" valuefield="value" data="InvoiceType" allowinput="false" />
                                </td>
                                <td>税率%
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="TaxRate" style="width: 100%" class="mini-textbox" vtype="float;min:0" required="true" />
                                </td>
                            </tr>
                            <tr>
                                <td>开票日期
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="InvoiceDate" class="mini-datepicker" style="width: 100%" required="true" />
                                </td>
                                <td>开票人登记人
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="InvoiceMakerID" textname="InvoiceMaker" class="mini-buttonedit" style="width: 100%" />
                                </td>
                            </tr>
                            <tr>
                                <td>备注
                                </td>
                                <td colspan="3" style="padding-right: 40px;">
                                    <input name="Remark" class="mini-textarea" style="width: 100%; height: 100px;" vtype="maxLength:500" />
                                </td>
                            </tr>
                        </table>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>合同相关信息</legend>
                    <div style="padding-left: 20px;">
                        <table width="100%" border="0" cellpadding="0" cellspacing="2">
                            <tr>
                                <td width="15%">合同金额（元）
                                </td>
                                <td width="35%;" style="padding-right: 40px;">
                                    <input name="ContractValue" style="width: 100%" class="mini-textbox" />
                                </td>
                                <td width="15%">已开票金额（元）
                                </td>
                                <td width="35%;" style="padding-right: 40px;">
                                    <input name="ContractInvoiceValue" style="width: 100%" class="mini-textbox" />
                                </td>
                            </tr>
                            <tr>
                                <td>剩余可开票金额（元）
                                </td>
                                <td style="padding-right: 40px;">
                                    <input name="RemainInvoiceValue" style="width: 100%" class="mini-textbox" />
                                </td>
                            </tr>
                        </table>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>关联收款项</legend>
                    <div>
                        <div class="mini-toolbar" style="padding: 0px; border-bottom: 0;">
                            <table style="width: 100%;">
                                <tr>
                                    <td style="width: 100%;">
                                        <a class="mini-button" iconcls="icon-add" onclick="addPlan();" plain="true">增加</a>
                                        <a class="mini-button" iconcls="icon-remove" onclick="deletePlans();" plain="true">删除</a>
                                    </td>
                                    <td style="white-space: nowrap;"></td>
                                </tr>
                            </table>
                        </div>
                        <div id="dataGrid" url="" class="mini-datagrid" style="width: 100%; height: 200px;" ondrawsummarycell="onDrawSummaryCell"
                            idfield="ID" showpager="false" multiselect="true" allowcelledit="true" allowcellselect="true" showsummaryrow="true">
                            <div property="columns">
                                <div type="indexcolumn">
                                </div>
                                <div type="checkcolumn">
                                </div>
                                <div field="Name" width="200" headeralign="center">
                                    收款名称
                                </div>
                                <div field="ReceiptValue" width="120" datatype="currency" currencyunit="￥" headeralign="center"
                                    align="right">
                                    收款项金额（元）
                                </div>
                                <div field="SumRelationValue" width="120" datatype="currency" currencyunit="￥" headeralign="center"
                                    align="right">
                                    已开票（元）
                                </div>
                                <div field="RelationValue" headeralign="center" datatype="currency" currencyunit="￥" summarytype="sum"
                                    width="120" align="right" vtype="required;float">
                                    本次开票金额（元）<input property="editor" class="mini-textbox" style="width: 100%;" onvaluechanged="invoiceRelationChanged" />
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>发票明细</legend>
                    <div>
                        <div class="mini-toolbar" style="padding: 0px; border-bottom: 0;">
                            <table style="width: 100%;">
                                <tr>
                                    <td style="width: 100%;">
                                        <a class='mini-button' id='btnInvoiceDatailAdd' iconcls='icon-add' onclick='addRow({"InvoiceAmount":0,"InvoiceState":"Normal"},{gridId:"InvoiceDatail",isLast:true});' visible='true'>增加</a>
                                        <a class='mini-button' id='btnInvoiceDatailDelete' iconcls='icon-remove' onclick='delRow({gridId:"InvoiceDatail"});' visible='true'>删除</a>
                                        <a class='mini-button' id='btnInvoiceDatailCreate' iconcls='icon-add' onclick='createRow();' visible='true'>自动生成发票明细</a>
                                    </td>
                                    <td style="white-space: nowrap;"></td>
                                </tr>
                            </table>
                        </div>
                        <div id='InvoiceDatail' multiselect='true' allowalternating='false' showsummaryrow='true' showindexcolumn='true'
                            showcheckcolumn='true' pagesize='50' style='width: 100%; height: 150px;' class='mini-datagrid' allowcellvalid='true'
                            multiselect='true' allowcelledit='true' allowcellselect='true' showpager='false' allowunselect='false' ondrawsummarycell="onDrawSummaryCellDatail">
                            <div property='columns'>
                                <div type='indexcolumn'></div>
                                <div type='checkcolumn'></div>
                                <div name='Code' width="200" field='Code' header='发票号' visible='true' align='left' autoshowpopup='true'>
                                    <input property='editor' class='mini-textbox' style='width: 100%' />
                                </div>
                                <div name='InvoiceAmount' width="120" field='InvoiceAmount' header='发票金额（元）' datatype="currency" currencyunit="￥" visible='true' align='right' autoshowpopup='true' summarytype='sum' summaryrenderer='onSummaryRenderer'>
                                    <input property='editor' class='mini-textbox' style='width: 100%' />
                                </div>
                                <div name='InvoiceState' width="120" field='InvoiceState' header='发票状态' type='comboboxcolumn' visible='true' align='center' autoshowpopup='true'>
                                    <input property='editor' class='mini-combobox' required='false' allowinput='false' multiselect='false' shownullitem='true' valuefromselect='true' style='width: 100%;' data='InvoiceState' />
                                </div>
                            </div>
                        </div>
                </fieldset>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    @Html.GetEnum("Market.InvoiceType")
    @Html.Raw(ViewBag.Scripts);
    var InvoiceState = [{ "text": "正常", "value": "Normal" }, { "text": "作废", "value": "Invalid" }];
</script>
<script src="/Market/Scripts/Market.js" type="text/javascript"></script>
<script type="text/javascript">
    addSingleUserSelector("InvoiceMakerID");
    addGridEnum("InvoiceDatail", "InvoiceState", "InvoiceState");

    function delDetail() {
        var InvoiceDatail = mini.get("InvoiceDatail");
    }

    function pageLoad() {
        setFormItemDisabled("Amount");
        setFormItemDisabled("ChineseAmount");
        setFormItemDisabled("ContractValue");
        setFormItemDisabled("ContractInvoiceValue");
        setFormItemDisabled("RemainInvoiceValue");
        setFormItemDisabled("PayerUnitSub");
        setFormItemDisabled("InvoiceMakerID");
        var ID = getQueryString("ID");
        if (ID) {
            var dataGrid = mini.get("dataGrid");
            var url = "GetPlanRelationList?ID=" + ID;
            dataGrid.setUrl(url);
            dataGrid.load();
            var InvoiceDatail = mini.get("InvoiceDatail");
            var urlDetail = "GetInvoiceDatailList?ID=" + ID;
            InvoiceDatail.setUrl(urlDetail);
            InvoiceDatail.load();
        }
    }

    function onFormSetData(data) {
        var invoiceAmoutCo = mini.getbyName("Amount");
        invoiceAmoutCo.doValueChanged();
    }

    function onContractSelecting(e) {
        var url = "/Market/Basic/Selector/ContractAndPlanReceiptSelector";
        openWindow(url, {
            refresh: false, title: "合同选择", width: "80%", height: " 80%",
            onDestroy: function (data) {
                if (!data || data == "close") { return; }
                e.sender.setValue(data.ID);
                e.sender.setText(data.Name);
                var payUnitCo = mini.getbyName("PayerUnitID");
                payUnitCo.setValue(data.PartyA);
                payUnitCo.setText(data.PartyAName);
                var payUnitCoSub = mini.getbyName("PayerUnitSub");
                payUnitCoSub.setValue(data.PartyASub);
                payUnitCoSub.setText(data.PartyASubName);
                mini.getbyName("InvoiceType").setValue(data.InvoiceType);
                var contractValue = parseFloat(data.ContractRMBAmount);
                if (isNaN(contractValue)) contractValue = 0;
                mini.getbyName("ContractValue").setValue(contractValue);
                var sumInvoiceValue = parseFloat(data.SumInvoiceValue);
                if (isNaN(sumInvoiceValue)) sumInvoiceValue = 0;
                mini.getbyName("ContractInvoiceValue").setValue(sumInvoiceValue);

                mini.getbyName("BankName").setValue(data.BankName);
                mini.getbyName("BankAccount").setValue(data.BankAccounts);
                mini.getbyName("TaxAccount").setValue(data.TaxAccounts);
                mini.getbyName("InvoiceName").setValue(data.InvoiceName);

                var dataGrid = mini.get("dataGrid"); dataGrid.clearRows();
                if (data.PlanReceipt && data.PlanReceipt.length > 0) {
                    var defaultInvoiceValue = 0;
                    for (var i = 0; i < data.PlanReceipt.length; i++) {
                        var receiptObject = data.PlanReceipt[i];
                        var row = dataGrid.findRow(function (data) { if (data.ReceiptObjectID == receiptObject.ID) { return true; } });
                        if (!row) {
                            row = {
                                ReceiptObjectID: receiptObject.ID, Name: receiptObject.Name, Code: receiptObject.Code,
                                ReceiptValue: receiptObject.ReceiptValue, PlanFinishDate: receiptObject.PlanFinishDate,
                                SumRelationValue: receiptObject.FactInvoiceValue,
                                RelationValue: receiptObject.RemainInvoiceValue
                            };
                            dataGrid.addRow(row);
                        }
                    }
                    autoSumRelationValue();
                }
                //autoCreateDetailRow(parseFloat(mini.getbyName("Amount").getValue()));
                calInvoiceValue();
            }
        });
    }

    function createRow() {
        var InvoiceDatail = mini.get("InvoiceDatail");
        if (InvoiceDatail.getData().length > 0) {
            msgUI("是否清除发票明细并按照每张" + Invoice_MaxAmount + "元重新生成？", 2, function (data) {
                if (data != "ok")
                    return;
                else {
                    InvoiceDatail.clearRows();
                    autoCreateDetailRow(parseFloat(mini.getbyName("Amount").getValue()));
                }
            });
        }
        else {
            InvoiceDatail.clearRows();
            autoCreateDetailRow(parseFloat(mini.getbyName("Amount").getValue()));
        }
    }

    function autoCreateDetailRow(amount) {
        if (parseFloat(Invoice_MaxAmount) > 0) {
            amountLeft = amount - Invoice_MaxAmount;
            if (amountLeft > 0) {
                mini.get("InvoiceDatail").addRow({ InvoiceAmount: Invoice_MaxAmount, InvoiceState: "Normal" });
                autoCreateDetailRow(amountLeft);
            }
            else
                mini.get("InvoiceDatail").addRow({ InvoiceAmount: amount, InvoiceState: "Normal" });
        }
        else
            mini.get("InvoiceDatail").addRow({ InvoiceAmount: amount, InvoiceState: "Normal" });
    }

    function addPlan() {
        var contractID = mini.getbyName("ContractInfoID").getValue();
        if (!contractID) { msgUI("请先选择合同再添加收款项"); return; }
        var url = "/Market/Basic/Selector/ReceiptObjectSelector?ContractInfoID=" + contractID;
        openWindow(url, {
            refresh: false, title: "收款项选择", width: "70%", height: "60%", addQueryString: false,
            onDestroy: function (data) {
                if (!data || data.length == 0 || data == "close") return;
                var dataGrid = mini.get("dataGrid");
                for (var i = 0; i < data.length; i++) {
                    var receiptObject = data[i];
                    var row = dataGrid.findRow(function (data) { if (data.ReceiptObjectID == receiptObject.ID) { return true; } });
                    if (!row) {
                        row = {
                            ReceiptObjectID: receiptObject.ID, Name: receiptObject.Name, Code: receiptObject.Code,
                            ReceiptValue: receiptObject.ReceiptValue, PlanFinishDate: receiptObject.PlanFinishDate,
                            SumRelationValue: receiptObject.FactInvoiceValue,
                            RelationValue: receiptObject.RemainInvoiceValue
                        };
                        dataGrid.addRow(row);
                    }
                }
                autoSumRelationValue();
                calInvoiceValue();
            }
        });
    }

    function deletePlans() {
        var dataGrid = mini.get("dataGrid");
        var rows = dataGrid.getSelecteds();
        dataGrid.removeRows(rows);
        autoSumRelationValue();
    }

    function autoSumRelationValue() {
        var dataGrid = mini.get("dataGrid"); dataGrid.commitEdit(); dataGrid.accept();
        var list = dataGrid.getData();
        var sumInvoiceValue = 0;
        for (var i = 0; i < list.length; i++) {
            var item = list[i];
            var relationValue = parseFloat(item.RelationValue);
            if (isNaN(relationValue)) relationValue = 0;
            sumInvoiceValue += relationValue;
        }
        var invoiceAmoutCo = mini.getbyName("Amount");
        if (invoiceAmoutCo) {
            invoiceAmoutCo.setValue(sumInvoiceValue);
            invoiceAmoutCo.doValueChanged();
        }
    }

    function InvoiceValueChanged(e) {
        var invoiceValue = e.value;
        if (invoiceValue != "0") {
            var chineseNumber = ToChineseNumber(invoiceValue);
            mini.getbyName("ChineseAmount").setValue(chineseNumber);
            calInvoiceValue();
        }
    }

    function invoiceRelationChanged() {
        autoSumRelationValue();
    }

    function calInvoiceValue() {
        var invoiceValue = parseFloat(mini.getbyName("Amount").getValue());
        if (isNaN(invoiceValue)) invoiceValue = 0;
        var contractValue = parseFloat(mini.getbyName("ContractValue").getValue());
        if (isNaN(contractValue)) contractValue = 0;
        var contractInvoiceValue = parseFloat(mini.getbyName("ContractInvoiceValue").getValue());
        if (isNaN(contractInvoiceValue)) contractInvoiceValue = 0;
        var remainValue = contractValue - contractInvoiceValue - invoiceValue;
        mini.getbyName("RemainInvoiceValue").setValue(remainValue);
    }

    function saveInvoice() {
        var InvoiceDatail = mini.get("InvoiceDatail");
        if (InvoiceDatail.getData().length > 0) {
            var normalInvoices = InvoiceDatail.findRows(function (row) {
                if (row.InvoiceState == "Normal") return true;
            });
            var normalAmount = 0;
            for (var i = 0; i < normalInvoices.length; i++) {
                normalAmount += parseFloat(normalInvoices[i].InvoiceAmount);
            }
            if (normalAmount != parseFloat(mini.getbyName("Amount").getValue())) {
                return msgUI("发票明细正常金额合计与开票金额不相等，请重新确认！");
            }
        }
        var dataGrid = mini.get("dataGrid"); dataGrid.commitEdit(); dataGrid.commitEdit();
        var relationData = dataGrid.getData();
        addExecuteParam("RelationData", mini.encode(relationData));
        InvoiceDatail.commitEdit(); InvoiceDatail.commitEdit();
        var InvoiceDatailData = InvoiceDatail.getData();
        addExecuteParam("InvoiceDatailData", mini.encode(InvoiceDatailData));
        save({ showLoading: true });
    }

    function onDrawSummaryCell(e) {
        var result = e.result;
        e.cellStyle = "text-align:right; color:Brown";
    }

    function onDrawSummaryCellDatail(e) {
        if (e.column.name == "InvoiceAmount") {
            var InvoiceDatail = mini.get("InvoiceDatail");
            var normalAmount = 0;
            var normalInvoices = InvoiceDatail.findRows(function (row) {
                if (row.InvoiceState == "Normal") return true;
            });
            for (var i = 0; i < normalInvoices.length; i++) {
                normalAmount += parseFloat(normalInvoices[i].InvoiceAmount);
            }
            e.cellStyle = "text-align:right; color:Brown";
            e.value = normalAmount;
            e.cellHtml = "￥" + fmoney(normalAmount, 2);
        }
    }

    function fmoney(s, n) {
        n = n > 0 && n <= 20 ? n : 2;
        s = parseFloat((s + "").replace(/[^\d\.-]/g, "")).toFixed(n) + "";
        var l = s.split(".")[0].split("").reverse(), r = s.split(".")[1];
        t = "";
        for (i = 0; i < l.length; i++) {
            t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? "," : "");
        }
        return t.split("").reverse().join("") + "." + r;
    }
</script>
